@page
@model ExampleWebApp.Pages.RegionsModel
@{
	ViewData["Title"] = "Region Queries";
}
<h1>Region Queries</h1>

<p>@Model.FeedbackMessage</p>

<form method="post">
	<label>
		@*
			the type of attribute for input can be set to different types for acceptable values
			"number" restricts the input to numericals
			the numerics by default are whole numbers
			but they can be negative or positive numbers

			We can define different attributes to refine the acceptable values
			min="xxx" indicates the minimum acceptable value
			max="xxx" indicates the maximum acceptable value
			step="xxx" indicates the increments of the acceptable values
				step="1" (default) this indicates only whole numbers are accepted
				step="0.01" this indicates decimals are accepted in increments of .01
					(this is great for $ amounts)
			required indicate that the field must have a value

			When you use validation attributes on your form input controls
				the user MUST meet the validation BEFORE the form is sent to the
				web server for processing

			To not cause validation to happen, add the attribute formnovalidate to the button. 
				formnovalidate overrides any validation (html5) that exists in any form control.
		*@
		Enter Region ID:
		<input type="number" asp-for="regionID"
			placeholder="enter your region id number" 
			required/>
	</label>
	<br />
	<button type="submit" asp-page-handler="Fetch">Fetch By ID</button>
	<button type="submit" asp-page-handler="Clear" formnovalidate>Clear</button>
	<br />
	<br />
	<label>
		Select a Region:
		<select asp-for="selectedRegionID">
			<option value="0">select...</option>
			@foreach(var region in Model.RegionList)
			{
				<option value="@region.RegionID">@region.RegionDescription</option>
			}
		</select>
	</label>
	<button type="submit" asp-page-handler="BySelection">Fetch Selected Region</button>

</form>


